{
  "version": 3,
  "sources": ["../node_modules/lodash/_baseRange.js", "../node_modules/lodash/eq.js", "../node_modules/lodash/_freeGlobal.js", "../node_modules/lodash/_root.js", "../node_modules/lodash/_Symbol.js", "../node_modules/lodash/_getRawTag.js", "../node_modules/lodash/_objectToString.js", "../node_modules/lodash/_baseGetTag.js", "../node_modules/lodash/isObject.js", "../node_modules/lodash/isFunction.js", "../node_modules/lodash/isLength.js", "../node_modules/lodash/isArrayLike.js", "../node_modules/lodash/_isIndex.js", "../node_modules/lodash/_isIterateeCall.js", "../node_modules/lodash/_trimmedEndIndex.js", "../node_modules/lodash/_baseTrim.js", "../node_modules/lodash/isObjectLike.js", "../node_modules/lodash/isSymbol.js", "../node_modules/lodash/toNumber.js", "../node_modules/lodash/toFinite.js", "../node_modules/lodash/_createRange.js", "../node_modules/lodash/range.js", "../node_modules/preact/src/util.js", "../node_modules/preact/src/options.js", "../node_modules/preact/src/create-element.js", "../node_modules/preact/src/component.js", "../node_modules/preact/src/create-context.js", "../node_modules/preact/src/constants.js", "../node_modules/preact/src/diff/children.js", "../node_modules/preact/src/diff/props.js", "../node_modules/preact/src/diff/index.js", "../node_modules/preact/src/render.js", "../node_modules/preact/src/clone-element.js", "../node_modules/preact/src/diff/catch-error.js", "../node_modules/preact/hooks/src/index.js", "../node_modules/@preact/signals-core/src/index.ts", "../node_modules/@preact/signals/src/index.ts", "../node_modules/yaml/browser/dist/nodes/Node.js", "../node_modules/yaml/browser/dist/visit.js", "../node_modules/yaml/browser/dist/doc/directives.js", "../node_modules/yaml/browser/dist/doc/anchors.js", "../node_modules/yaml/browser/dist/nodes/Alias.js", "../node_modules/yaml/browser/dist/nodes/toJS.js", "../node_modules/yaml/browser/dist/nodes/Scalar.js", "../node_modules/yaml/browser/dist/doc/createNode.js", "../node_modules/yaml/browser/dist/nodes/Collection.js", "../node_modules/yaml/browser/dist/stringify/stringifyComment.js", "../node_modules/yaml/browser/dist/stringify/foldFlowLines.js", "../node_modules/yaml/browser/dist/stringify/stringifyString.js", "../node_modules/yaml/browser/dist/stringify/stringify.js", "../node_modules/yaml/browser/dist/stringify/stringifyPair.js", "../node_modules/yaml/browser/dist/log.js", "../node_modules/yaml/browser/dist/nodes/addPairToJSMap.js", "../node_modules/yaml/browser/dist/nodes/Pair.js", "../node_modules/yaml/browser/dist/stringify/stringifyCollection.js", "../node_modules/yaml/browser/dist/nodes/YAMLMap.js", "../node_modules/yaml/browser/dist/schema/common/map.js", "../node_modules/yaml/browser/dist/nodes/YAMLSeq.js", "../node_modules/yaml/browser/dist/schema/common/seq.js", "../node_modules/yaml/browser/dist/schema/common/string.js", "../node_modules/yaml/browser/dist/schema/common/null.js", "../node_modules/yaml/browser/dist/schema/core/bool.js", "../node_modules/yaml/browser/dist/stringify/stringifyNumber.js", "../node_modules/yaml/browser/dist/schema/core/float.js", "../node_modules/yaml/browser/dist/schema/core/int.js", "../node_modules/yaml/browser/dist/schema/core/schema.js", "../node_modules/yaml/browser/dist/schema/json/schema.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/float.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/int.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/set.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js", "../node_modules/yaml/browser/dist/schema/tags.js", "../node_modules/yaml/browser/dist/schema/Schema.js", "../node_modules/yaml/browser/dist/stringify/stringifyDocument.js", "../node_modules/yaml/browser/dist/doc/applyReviver.js", "../node_modules/yaml/browser/dist/doc/Document.js", "../node_modules/yaml/browser/dist/errors.js", "../node_modules/yaml/browser/dist/compose/resolve-props.js", "../node_modules/yaml/browser/dist/compose/util-contains-newline.js", "../node_modules/yaml/browser/dist/compose/util-flow-indent-check.js", "../node_modules/yaml/browser/dist/compose/util-map-includes.js", "../node_modules/yaml/browser/dist/compose/resolve-block-map.js", "../node_modules/yaml/browser/dist/compose/resolve-block-seq.js", "../node_modules/yaml/browser/dist/compose/resolve-end.js", "../node_modules/yaml/browser/dist/compose/resolve-flow-collection.js", "../node_modules/yaml/browser/dist/compose/compose-collection.js", "../node_modules/yaml/browser/dist/compose/resolve-block-scalar.js", "../node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js", "../node_modules/yaml/browser/dist/compose/compose-scalar.js", "../node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js", "../node_modules/yaml/browser/dist/compose/compose-node.js", "../node_modules/yaml/browser/dist/compose/compose-doc.js", "../node_modules/yaml/browser/dist/compose/composer.js", "../node_modules/yaml/browser/dist/parse/cst-visit.js", "../node_modules/yaml/browser/dist/parse/cst.js", "../node_modules/yaml/browser/dist/parse/lexer.js", "../node_modules/yaml/browser/dist/parse/line-counter.js", "../node_modules/yaml/browser/dist/parse/parser.js", "../node_modules/yaml/browser/dist/public-api.js", "../src/devices/microbrute/view.tsx", "../src/devices/base.ts", "../src/devices/microbrute/schema.ts", "../src/state.ts", "../src/components/view.tsx", "../db/library.js", "../src/components/Search.tsx", "../src/components/Library.tsx", "../src/index.ts"],
  "sourcesContent": ["/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n", "var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n", "var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n", "var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n", "import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tif (\n\t\ttypeof vnode.type === 'function' &&\n\t\t!vnode._mask &&\n\t\t// Ignore root Fragment node\n\t\tvnode._parent !== null\n\t) {\n\t\tvnode._mask =\n\t\t\t(vnode._parent && vnode._parent._mask ? vnode._parent._mask : '') +\n\t\t\t(vnode._parent && vnode._parent._children\n\t\t\t\t? vnode._parent._children.indexOf(vnode)\n\t\t\t\t: 0);\n\t} else if (!vnode._mask) {\n\t\tvnode._mask =\n\t\t\tvnode._parent && vnode._parent._mask ? vnode._parent._mask : '';\n\t}\n\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nfunction hash(s) {\n\tlet h = 0,\n\t\ti = s.length;\n\twhile (i > 0) {\n\t\th = ((h << 5) - h + s.charCodeAt(--i)) | 0;\n\t}\n\treturn h;\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\tstate._value = 'P' + hash(currentComponent._vnode._mask) + currentIndex;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t// `signal` is a new dependency. Create a new node dependency node, move it\n\t\t//  to the front of the current context's dependency list.\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: undefined,\n\t\t\t_nextSource: evalContext._sources,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t// If `node` is not already the current head of the dependency list (i.e.\n\t\t// there is a previous node in the list), then make `node` the new head.\n\t\tif (node._prevSource !== undefined) {\n\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = node._prevSource;\n\t\t\t}\n\t\t\tnode._prevSource = undefined;\n\t\t\tnode._nextSource = evalContext._sources;\n\t\t\t// evalCotext._sources must be !== undefined (and !== node), because\n\t\t\t// `node` was originally pointing to some previous node.\n\t\t\tevalContext._sources!._prevSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/** @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable notes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\tconst prev = node._prevTarget;\n\tconst next = node._nextTarget;\n\tif (prev !== undefined) {\n\t\tprev._nextTarget = next;\n\t\tnode._prevTarget = undefined;\n\t}\n\tif (next !== undefined) {\n\t\tnext._prevTarget = prev;\n\t\tnode._nextTarget = undefined;\n\t}\n\tif (node === this._targets) {\n\t\tthis._targets = next;\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then the\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\t// At this point target._sources is a mishmash of current & former dependencies.\n\t// The current dependencies are also in a reverse order of use.\n\t// Therefore build a new, reverted list of dependencies containing only the current\n\t// dependencies in a proper order of use.\n\t// Drop former dependencies from the list and unsubscribe from their change notifications.\n\n\tlet node = target._sources;\n\tlet sources = undefined;\n\twhile (node !== undefined) {\n\t\tconst next = node._nextSource;\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\t\t\tnode._nextSource = undefined;\n\t\t} else {\n\t\t\tif (sources !== undefined) {\n\t\t\t\tsources._prevSource = node;\n\t\t\t}\n\t\t\tnode._prevSource = undefined;\n\t\t\tnode._nextSource = sources;\n\t\t\tsources = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\t\tnode = next;\n\t}\n\ttarget._sources = sources;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNIN flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\tSignal.prototype._unsubscribe.call(this, node);\n\n\t// Computed signal unsubscribes from its dependencies from it loses its last subscriber.\n\tif (this._targets === undefined) {\n\t\tthis._flags &= ~TRACKING;\n\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._unsubscribe(node);\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\teffect._callback();\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n", "import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => {\n\t\t\tcallback.current();\n\t\t});\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n", "const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n}\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, NodeBase, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n", "import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/Node.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n", "import { isNode } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n", "import { isScalar, isCollection } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { NodeBase, ALIAS, isAlias, isCollection, isPair } from './Node.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        const data = anchors.get(source);\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n", "import { hasAnchor } from './Node.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n", "import { NodeBase, SCALAR } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n", "import { createNode } from '../doc/createNode.js';\nimport { NodeBase, isNode, isPair, isCollection, isScalar } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n", "/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n", "const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx) => ({\n    indentAtStart: ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (indent === '' && containsDocumentMarker(value)) {\n        ctx.forceBlockIndent = true;\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/Node.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n", "import { isCollection, isNode, isScalar, isSeq } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vcb = '';\n    let valueComment = null;\n    if (isNode(value)) {\n        if (value.spaceBefore)\n            vcb = '\\n';\n        if (value.commentBefore) {\n            const cs = commentString(value.commentBefore);\n            vcb += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        valueComment = value.comment;\n    }\n    else if (value && typeof value === 'object') {\n        value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substr(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (vcb || keyComment) {\n        if (valueStr === '' && !ctx.inFlow)\n            ws = vcb === '\\n' ? '\\n\\n' : vcb;\n        else\n            ws = `${vcb}\\n${ctx.indent}`;\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n'))\n            ws = `\\n${ctx.indent}`;\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n')\n        ws = '';\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n", "function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n", "import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './Node.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n", "import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './Node.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n", "import { Collection } from '../nodes/Collection.js';\nimport { isNode, isPair } from '../nodes/Node.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start} ${lines.join(' ')} ${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n", "import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './Node.js';\nimport { Pair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n", "import { isMap } from '../../nodes/Node.js';\nimport { createPair } from '../../nodes/Pair.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nfunction createMap(schema, obj, ctx) {\n    const { keepUndefined, replacer } = ctx;\n    const map = new YAMLMap(schema);\n    const add = (key, value) => {\n        if (typeof replacer === 'function')\n            value = replacer.call(obj, key, value);\n        else if (Array.isArray(replacer) && !replacer.includes(key))\n            return;\n        if (value !== undefined || keepUndefined)\n            map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n        for (const [key, value] of obj)\n            add(key, value);\n    }\n    else if (obj && typeof obj === 'object') {\n        for (const key of Object.keys(obj))\n            add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n        map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n}\nconst map = {\n    collection: 'map',\n    createNode: createMap,\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { map };\n", "import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n", "import { createNode } from '../../doc/createNode.js';\nimport { isSeq } from '../../nodes/Node.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction createSeq(schema, obj, ctx) {\n    const { replacer } = ctx;\n    const seq = new YAMLSeq(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n        let i = 0;\n        for (let it of obj) {\n            if (typeof replacer === 'function') {\n                const key = obj instanceof Set ? it : String(i++);\n                it = replacer.call(obj, key, it);\n            }\n            seq.items.push(createNode(it, undefined, ctx));\n        }\n    }\n    return seq;\n}\nconst seq = {\n    collection: 'seq',\n    createNode: createSeq,\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    }\n};\n\nexport { seq };\n", "import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n", "function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n", "import { isSeq, isPair, isMap } from '../../nodes/Node.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n", "import { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { isScalar, isPair } from '../../nodes/Node.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new YAMLOMap();\n        omap.items = pairs.items;\n        return omap;\n    }\n};\n\nexport { YAMLOMap, omap };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n", "import { isMap, isPair, isScalar } from '../../nodes/Node.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new YAMLSet(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n};\n\nexport { YAMLSet, set };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => (n < 10 ? '0' + String(n) : String(n)))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n", "import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { floatTime, intTime, timestamp } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n", "import { MAP, SCALAR, SEQ } from '../nodes/Node.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n", "import { isNode } from '../nodes/Node.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n", "/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringify } from '../stringify/stringify.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n", "class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '\u2026' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '\u2026';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '\u2026\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.min(end.col - col, 80 - ci);\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n", "function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n", "function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n", "import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n", "import { isScalar } from '../nodes/Node.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n", "import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    const map = new YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n", "import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n", "function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n", "import { isPair } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap(ctx.schema)\n        : new YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // \u2192 key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n", "import { isNode, isMap } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    let coll;\n    switch (token.type) {\n        case 'block-map': {\n            coll = resolveBlockMap(CN, ctx, token, onError);\n            break;\n        }\n        case 'block-seq': {\n            coll = resolveBlockSeq(CN, ctx, token, onError);\n            break;\n        }\n        case 'flow-collection': {\n            coll = resolveFlowCollection(CN, ctx, token, onError);\n            break;\n        }\n    }\n    if (!tagToken)\n        return coll;\n    const tagName = ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (!tagName)\n        return coll;\n    // Cast needed due to: https://github.com/Microsoft/TypeScript/issues/3841\n    const Coll = coll.constructor;\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    const expType = isMap(coll) ? 'map' : 'seq';\n    let tag = ctx.schema.tags.find(t => t.collection === expType && t.tag === tagName);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            coll.tag = tagName;\n            return coll;\n        }\n    }\n    const res = tag.resolve(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n", "import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n", "import { SCALAR, isScalar } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n", "function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n", "import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n", "import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n", "import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/Node.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n", "const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` \u2013 Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` \u2013 Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` \u2013 Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` \u2013 The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n", "export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n", "import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n", "/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n", "import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n", "import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n", "import { h, Fragment } from 'preact';\nimport { useContext } from \"preact/hooks\";\nimport range from 'lodash/range';\nimport { Control, ControlValueOption, ControlValueRange } from '../base';\nimport { microbrute, controlMap } from './schema';\nimport { PatchState } from '../../components/view';\nimport { Signal } from '@preact/signals';\nimport { useAppState } from '../../state';\n\n\ninterface ControlProps<Value> {\n  schema: Control,\n  value: Value,\n}\n\nfunction Knob({ schema, value }: ControlProps<number>) {\n  if (value === undefined) return;\n  \n  const size = 7;\n  \n  // determine angle\n  const aMin = 30;\n  const aMax = 330;\n  const aDelta = aMax - aMin;\n  const a = value / 20 * aDelta + aMin;\n\n  // determine center / origin\n  const x = size / 2 + schema.ui?.x;\n  const y = size / 2 + schema.ui?.y;\n\n  // rotate\n  const transform = `rotate(${a}, ${x}, ${y})`;\n\n  return <>\n    <use xlinkHref=\"#knob-decor\" x={schema.ui?.x} y={schema.ui?.y} width={size} height={size} />\n    <use xlinkHref=\"#knob\"       x={schema.ui?.x} y={schema.ui?.y} width={size} height={size} id={schema.name} transform={transform} />\n  </>;\n}\n\nfunction Toggle({ schema, value }: ControlProps<string>) {\n  if (value === undefined) return;\n\n  console.log(schema.name, value);\n  const size = 7;\n  const delta = 35 - 20;\n  const travelHeight = 60 - delta + 5;\n  const s = schema.value as ControlValueOption;\n  const i = s.options.findIndex((v) => v === value);\n  console.log(i);\n  if (i < 0 || i > s.options.length - 1) {\n    console.error(`Value out of range:`, schema.name, i);\n  }\n  const y = i / (s.options.length - 1) * (delta / travelHeight) * size;\n  console.log(y);\n  return <>\n    <use xlinkHref=\"#toggle-decor\" x={schema.ui?.x} y={schema.ui?.y} width={size} height={size} />\n    <use xlinkHref=\"#toggle\"       x={schema.ui?.x} y={schema.ui?.y} width={size} height={size} transform={`translate(0, ${y})`} />\n  </>;\n}\n\nfunction Fader({ schema, value }: ControlProps<number>) {\n  if (value === undefined) return;\n\n  const width = 6;\n  const height = 12;\n  const travelHeight = 9;\n  const s = schema.value as ControlValueRange;\n  const y = value / s.max * travelHeight;\n  return <g>\n    <use xlinkHref=\"#fader-decor\" x={schema.ui?.x} y={schema.ui?.y} width={width} height={height} />\n    <use xlinkHref=\"#fader\"       x={schema.ui?.x} y={schema.ui?.y} width={width} height={height} transform={`translate(0, ${-y})`} />\n  </g>;\n}\n\nfunction Patch({ schema, value }: ControlProps<string>) {\n  const size = 5;\n  const half = size / 2;\n  return <g>\n    <use xlinkHref=\"#patch-decor\" x={schema.ui?.x} y={schema.ui?.y} width={size} height={size} />\n  </g>;\n}\n\nfunction PatchOutCable({ schema, value }: ControlProps<string>) {\n  const size = 5;\n  const half = size / 2;\n  let to: Control;\n  to = controlMap.get(value);\n  console.log('to', value, to);\n  const outpos = { x: schema.ui?.x + half, y: schema.ui?.y + half };\n  const inpos = { x: to.ui?.x + half, y: to.ui?.y + half };\n  return <g className=\"patch-cable\">\n    <circle cx={outpos.x} cy={outpos.y} r={size / 10} />\n    <circle cx={inpos.x} cy={inpos.y} r={size / 10} />\n    <line x1={outpos.x} y1={outpos.y} x2={inpos.x} y2={inpos.y} />\n  </g>;\n}\n\nfunction GenericControl({ schema, value }: ControlProps<unknown>) {\n  switch (schema.ui.type) {\n    case 'toggle': return <Toggle schema={schema} value={value as string} />;\n    case 'fader': return <Fader schema={schema} value={value as number} />;\n    case 'knob': return <Knob schema={schema} value={value as number} />;\n    case 'patch': return <Patch schema={schema} value={value as string} />;\n  }\n}\n\nfunction Template() {\n  return <>\n    <style>\n      {`\n      #knob-decor line {\n        stroke:black;\n        stroke-width:1;\n      }\n\n      #knob circle {\n        fill: white;\n        stroke: black;\n        stroke-width: 1;\n      }\n      #knob line {\n        stroke: rgb(255,0,0);\n        stroke-width: 5;\n      }\n\n      #toggle-decor rect {\n        fill: none;\n        stroke: black;\n        stroke-width: 1;\n      }\n      #toggle circle {\n        fill: red;\n      }\n\n      #fader-decor .notch {\n        stroke: black;\n        stroke-width: 2;\n      }\n      #fader-decor .track {\n        stroke: black;\n        stroke-width: 5;\n        stroke-linecap: round;  \n      }\n      #fader rect {\n        fill: white;\n        stroke: black;\n        stroke-width: 1;\n      }\n      #fader line {\n        stroke: rgb(255,0,0);\n        stroke-width: 5;\n      }\n\n      #patch-decor {\n        fill: white;\n        stroke: black;\n        stroke-width: 2;\n      }\n\n      .patch-cable circle {\n        fill: red;\n      }\n      .patch-cable line {\n        stroke: red;\n        stroke-width: 0.5;\n        line-cap: round;\n      }\n      `}\n    </style>\n    \n    <symbol id=\"knob-decor\" viewBox=\"0 0 100 100\">\n      <g>\n        {range(45, 315 + 1, 15).map((a) => \n          <line x1=\"50\" y1=\"50\" x2=\"50\" y2=\"100\" transform={`rotate(${a}, 50, 50)`} />\n        )}\n      </g>\n    </symbol>\n\n    <symbol id=\"knob\" viewBox=\"0 0 100 100\">\n      <g>\n        <circle cx=\"50\" cy=\"50\" r=\"35\" />\n        <line x1=\"50\" y1=\"50\" x2=\"50\" y2=\"90\" />\n      </g>\n    </symbol>\n\n    <symbol id=\"toggle-decor\" viewBox=\"0 0 100 100\">\n      <rect x=\"35\" y=\"20\" width=\"30\" height=\"60\" rx=\"15\" />\n    </symbol>\n\n    <symbol id=\"toggle\" viewBox=\"0 0 100 100\">\n      <circle cx=\"50\" cy=\"35\" r=\"11\" />\n    </symbol>\n\n    <symbol id=\"fader-decor\" viewBox=\"0 0 100 200\">\n      <g>\n        {range(0, 20 + 1).map((y) => {\n          let offset = 0;\n          if (y % 5 === 0) {\n            offset += 5\n          }\n          if (y % 10 === 0) {\n            offset += 5;\n          }\n          const minY = 25\n          const notchHeight = 200 - minY * 2;\n          const finalY = y / 20 * notchHeight + minY;\n          return <line className=\"notch\" x1={20 - offset} y1={finalY} x2=\"42\" y2={finalY} />\n        })}\n        <line className=\"track\" x1={50} y1={10} x2={50} y2={190} />\n      </g>\n    </symbol>\n\n    <symbol id=\"fader\" viewBox=\"0 0 100 200\">\n      <g>\n        <rect x={28} y={155} width={44} height={40} />\n        <line x1={30} y1={175} x2={70} y2={175} />\n      </g>\n    </symbol>\n\n    <symbol id=\"patch-decor\" viewBox=\"0 0 100 100\">\n      <circle cx=\"50\" cy=\"50\" r=\"15\" />\n    </symbol> \n  </>;\n}\n\nexport default function Microbrute() {\n  const { patch } = useAppState();\n  const params = patch.value?.params;\n  if (!params) return null;\n\n  // Patch outs controls that have a value\n  let patcheOuts = microbrute.controls.filter((c) => c.value.type === 'patch-out');\n  patcheOuts = patcheOuts.filter((cont) => !!params[cont.name]);\n\n  return (\n    <svg viewBox=\"0 0 100 45\">\n      {/* <image href=\"img-dev/minibrute.jpg\" width=\"100\" /> */}\n      <Template />\n      {microbrute.controls.map((schema) => <GenericControl schema={schema} value={params[schema.name]} />)}\n      {patcheOuts.map((schema) => <PatchOutCable schema={schema} value={params[schema.name] as string} />)}\n    </svg>\n  );\n}", "export interface ControlValueOption {\n  type: 'option';\n  options: string[];\n}\n\nexport interface ControlValueRange {\n  type: 'range';\n  min: number;\n  max: number;\n}\n\nexport interface ControlValuePatchOut {\n  type: 'patch-out';\n  to?: string;\n}\n\nexport interface ControlValuePatchIn {\n  type: 'patch-in';\n  from?: string;\n}\n\nexport type ControlValue = ControlValueOption | ControlValueRange | ControlValuePatchOut | ControlValuePatchIn;\n\nexport interface ControlUi {\n  type: string;\n  x: number;\n  y: number;\n}\n\nexport interface Control {\n  name: string;\n  value: ControlValue;\n  ui?: ControlUi;\n}\n\nexport interface DeviceSchema {\n  readonly name: string;\n  readonly controls: readonly Control[];\n}\n\nexport const range = (min: number, max: number): ControlValueRange => ({\n  type: 'range',\n  min,\n  max,\n});\n\nexport const option = (options: string[]): ControlValueOption => ({\n  type: 'option',\n  options,\n});\n\nexport const patchOut = (): ControlValuePatchOut => ({\n  type: 'patch-out',\n});\n\nexport const patchIn = (): ControlValuePatchIn => ({\n  type: 'patch-in',\n});\n\nexport function ui(type: string, x: number, y: number): ControlUi {\n  return { type, x, y };\n}\n", "import { Control, ControlValueRange, DeviceSchema, option, ui, range, patchOut, patchIn } from '../base';\n\nconst standardKnob: ControlValueRange = {\n  type: 'range',\n  min: 0,\n  max: 18,\n} as const;\n\nexport const microbrute: DeviceSchema = {\n  name: 'Microbrute',\n  controls: [\n    // {\n    //   name: 'octave',\n    //   value: option(['-2', '-1', '0', '1', '2']),\n    //   ui: ui('toggle', 5, 5),\n    // },\n    {\n      name: 'osc.sub',\n      value: standardKnob,\n      ui: ui('knob', 25, 7.25),\n    },\n    {\n      name: 'osc.ultrasaw',\n      value: standardKnob,\n      ui: ui('knob', 32.5, 7.25),\n    },\n    {\n      name: 'osc.pulsewidth',\n      value: standardKnob,\n      ui: ui('knob', 40, 7.25),\n    },\n    {\n      name: 'osc.metalizer',\n      value: standardKnob,\n      ui: ui('knob', 47.5, 7.25),\n    },\n    {\n      name: 'osc.overtone',\n      value: standardKnob,\n      ui: ui('knob', 25, 15.5),\n    },\n    {\n      name: 'osc.saw',\n      value: standardKnob,\n      ui: ui('knob', 32.5, 15.5),\n    },\n    {\n      name: 'osc.square',\n      value: standardKnob,\n      ui: ui('knob', 40, 15.5),\n    },\n    {\n      name: 'osc.triangle',\n      value: standardKnob,\n      ui: ui('knob', 47.5, 15.5),\n    },\n    {\n      name: 'filter.cutoff',\n      value: standardKnob,\n      ui: ui('knob', 55, 7.25),\n    },\n    {\n      name: 'filter.res',\n      value: standardKnob,\n      ui: ui('knob', 62.75, 7.25),\n    },\n    {\n      name: 'filter.brute',\n      value: standardKnob,\n      ui: ui('knob', 70.25, 7.25),\n    },\n    {\n      name: 'filter.mode',\n      value: option(['HP', 'BP', 'LP']),\n      ui: ui('toggle', 55, 15.5),\n    },\n    {\n      name: 'filter.env',\n      value: standardKnob,\n      ui: ui('knob', 62.75, 15.5),\n    },\n    {\n      name: 'filter.kbd',\n      value: standardKnob,\n      ui: ui('knob', 70.25, 15.5),\n    },\n    {\n      name: 'controls.glide',\n      value: standardKnob,\n      ui: ui('knob', 25, 26),\n    },\n    {\n      name: 'controls.mod',\n      value: option(['lfo', 'cutoff']),\n      ui: ui('toggle', 25, 32.5),\n    },\n    {\n      name: 'lfo.amount',\n      value: standardKnob,\n      ui: ui('knob', 32.5, 26),\n    },\n    {\n      name: 'lfo.rate',\n      value: standardKnob,\n      ui: ui('knob', 40, 26),\n    },\n    {\n      name: 'lfo.wave',\n      value: option(['square', 'saw', 'triangle']),\n      ui: ui('toggle', 32.5, 32.5),\n    },\n    {\n      name: 'lfo.sync',\n      value: option(['seq', 'free']),\n      ui: ui('toggle', 40, 32.5),\n    },\n    {\n      name: 'env.amount',\n      value: standardKnob,\n      ui: ui('knob', 47.5, 26),\n    },\n    {\n      name: 'env.vca',\n      value: option(['env', 'gate']),\n      ui: ui('toggle', 47.5, 32.5),\n    },\n    {\n      name: 'env.attack',\n      value: range(0, 20),\n      ui: ui('fader', 55.6, 26.25),\n    },\n    {\n      name: 'env.decay',\n      value: range(0, 20),\n      ui: ui('fader', 60.7, 26.25),\n    },\n    {\n      name: 'env.sustain',\n      value: range(0, 20),\n      ui: ui('fader', 65.7, 26.25),\n    },\n    {\n      name: 'env.release',\n      value: range(0, 20),\n      ui: ui('fader', 70.8, 26.25),\n    },\n\n    {\n      name: 'patch.envOut',\n      value: patchOut(),\n      ui: ui('patch', 78.6, 5.95),\n    },\n    {\n      name: 'patch.lfoOut',\n      value: patchOut(),\n      ui: ui('patch', 78.6, 9.6),\n    },\n    {\n      name: 'patch.metalIn',\n      value: patchIn(),\n      ui: ui('patch', 82.1, 5.95),\n    },\n    {\n      name: 'patch.sawIn',\n      value: patchIn(),\n      ui: ui('patch', 85.5, 5.95),\n    },\n    {\n      name: 'patch.subIn',\n      value: patchIn(),\n      ui: ui('patch', 89, 5.95),\n    },\n    {\n      name: 'patch.pitchIn',\n      value: patchIn(),\n      ui: ui('patch', 82.1, 9.6),\n    },\n    {\n      name: 'patch.filterIn',\n      value: patchIn(),\n      ui: ui('patch', 85.5, 9.6),\n    },\n    {\n      name: 'patch.pwmIn',\n      value: patchIn(),\n      ui: ui('patch', 89, 9.6),\n    },\n  ],\n} as const;\n\nexport const controlMap = new Map<string, Control>();\nmicrobrute.controls.forEach((control) => controlMap.set(control.name, control));\n\nexport const keys = microbrute.controls.map((item) => item.name);\nexport type Keys = typeof microbrute['controls'][number]['name'];", "import { createContext } from 'preact';\nimport { signal, Signal } from '@preact/signals';\nimport { useContext } from \"preact/hooks\";\n\n// export type PatchStateI = Record<string, Signal<unknown>>;\n\ninterface AppState {\n  patch: Signal<any>\n}\n\nexport const state: AppState = createAppState();\nexport const AppState = createContext<AppState>(state);\n\nfunction createAppState() {\n  return {\n    patch: signal(undefined),\n  };\n}\n\nexport function useAppState() {\n  return useContext(AppState);\n}", "import { createContext, h, render } from 'preact';\nimport { signal, Signal } from '@preact/signals';\nimport Microbrute from '../devices/microbrute/view';\nimport createState from '../devices/microbrute/state';\n\nexport type PatchStateI = Record<string, Signal<unknown>>;\n\nexport const patchState: PatchStateI = {};\nexport const PatchState = createContext<PatchStateI>(patchState);\n\nexport function mount() {\n  render(\n    <PatchState.Provider value={patchState}>\n      <Microbrute />\n    </PatchState.Provider>,\n    document.getElementById('device')\n  );\n}\n", "export default library = [{\"name\":\"Test 2\",\"device\":\"Microbrute\",\"notes\":\"This is a test patch\",\"tags\":\"bass\",\"params\":{\"osc.sub\":9,\"osc.ultrasaw\":9,\"osc.pulsewidth\":9,\"osc.metalizer\":9,\"osc.overtone\":9,\"osc.saw\":9,\"osc.square\":9,\"osc.triangle\":9,\"filter.cutoff\":9,\"filter.res\":9,\"filter.brute\":9,\"filter.env\":9,\"filter.mode\":\"LP\",\"filter.kbd\":9,\"controls.glide\":9,\"controls.mod\":\"cutoff\",\"lfo.amount\":9,\"lfo.rate\":9,\"lfo.wave\":\"square\",\"lfo.sync\":\"free\",\"env.amount\":9,\"env.vca\":\"env\",\"env.attack\":9,\"env.decay\":9,\"env.sustain\":9,\"env.release\":9,\"patch.envOut\":\"patch.metalIn\"},\"perform\":[{\"osc.overtone\":[0,1]}]},{\"name\":\"Tone Sweep\",\"device\":\"Microbrute\",\"notes\":\"Use the overtone knob to sweep from high saws to low buzzy tones. Personally used plucky sound driven by sequencer and playing with seq rate.\",\"tags\":\"bass lead dark bright\",\"params\":{\"osc.sub\":9,\"osc.ultrasaw\":0,\"osc.pulsewidth\":0,\"osc.metalizer\":0,\"osc.overtone\":2,\"osc.saw\":2,\"osc.square\":2,\"osc.triangle\":2,\"filter.cutoff\":9,\"filter.res\":10,\"filter.brute\":10,\"filter.env\":15,\"filter.mode\":\"LP\",\"filter.kbd\":8,\"controls.glide\":0,\"controls.mod\":\"cutoff\",\"lfo.amount\":0,\"lfo.rate\":0,\"lfo.wave\":\"square\",\"lfo.sync\":\"free\",\"env.amount\":10,\"env.vca\":\"env\",\"env.attack\":0,\"env.decay\":10,\"env.sustain\":15,\"env.release\":20,\"patch.envOut\":\"patch.metalIn\"},\"perform\":[{\"osc.overtone\":[0,1]}]}];", "import { createContext, h, Fragment, render } from 'preact';\nimport { signal, Signal } from '@preact/signals';\nimport Microbrute from '../devices/microbrute/view';\nimport createState from '../devices/microbrute/state';\nimport { AppState, state, useAppState } from '../state';\nimport library from '../../db/library';\n\n\nexport default function Search() {\n//   const patchIndex = 0;\n//   const { patch } = useAppState();\n//   console.log('render Library', patch);\n\n// 5424 1813 9574 5834\n// 01 25\n  const app = useAppState();\n  const handleClick = (e, index) => {\n    e.preventDefault();\n    app.patch.value = library[index];\n  };\n\n  return <>\n    Microbrute Patches\n    <ul>\n      {library.map((item, i) => <li><a href=\"#\" onClick={(e) => handleClick(e, i)}>{item.name}</a></li>)}\n    </ul>\n  </>;\n}\n", "import { createContext, h, Fragment, render } from 'preact';\nimport { signal, Signal } from '@preact/signals';\nimport Microbrute from '../devices/microbrute/view';\nimport createState from '../devices/microbrute/state';\nimport { AppState, state, useAppState } from '../state';\nimport Search from './Search';\n\nexport function mountLibrary() {\n  render(\n    <AppState.Provider value={state}>\n      <Library />\n    </AppState.Provider>\n  , document.getElementById('device'));\n}\n\nexport default function Library() {\n  const { patch } = useAppState();\n\n  return <>\n    <Search />\n    <Microbrute />\n    <h2>{patch.value?.name}</h2>\n    <div>{patch.value?.notes}</div>\n  </>;\n}\n", "\nimport { signal } from '@preact/signals';\nimport { parse } from 'yaml';\nimport { mount, patchState } from './components/view';\nimport { mountLibrary } from './components/Library';\nimport library from '../db/library';\nimport { state } from './state';\n\ndeclare global {\n  interface Window { Entry: any; }\n}\n\nwindow.Entry = {\n  editor() {\n    mount();\n\n    const $patchSrc = document.getElementById('patch-src');\n    function getPatchSrc() {\n      return ($patchSrc as HTMLTextAreaElement)?.value ?? '';\n    }\n\n    const update = () => {\n      const src = getPatchSrc();\n      const patch = parse(src);\n      window['patch'] = patch;\n\n      for (let key of Object.keys(patch.patch)) {\n        //displayPatchValue(key, patch.patch[key]);\n        if (!patchState[key]) {\n          patchState[key] = signal(undefined);\n        }\n        patchState[key].value = patch.patch[key];\n      }\n    }\n\n    $patchSrc.addEventListener('keyup', () => {\n      update();\n    });\n    update();\n  },\n\n  async viewer() {\n    mountLibrary();\n\n\n    // const setPatchState = (patch: any) => {\n    //   for (let key of Object.keys(patch.patch)) {\n    //     //displayPatchValue(key, patch.patch[key]);\n    //     if (!patchState[key]) {\n    //       patchState[key] = signal(undefined);\n    //     }\n    //     patchState[key].value = patch.patch[key];\n    //   }\n    // }\n\n    console.log('viewer')\n    const patch = library[0];\n    window['patch'] = patch;\n    state.patch.value = patch;\n    console.log(state.patch.value);\n\n    // setPatchState(patch);\n  }\n};\n"],
  "mappings": "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",
  "names": ["require_baseRange", "__commonJSMin", "exports", "module", "nativeCeil", "nativeMax", "baseRange", "start", "end", "step", "fromRight", "index", "length", "result", "require_eq", "__commonJSMin", "exports", "module", "eq", "value", "other", "require_freeGlobal", "__commonJSMin", "exports", "module", "freeGlobal", "require_root", "__commonJSMin", "exports", "module", "freeGlobal", "freeSelf", "root", "require_Symbol", "__commonJSMin", "exports", "module", "root", "Symbol", "require_getRawTag", "__commonJSMin", "exports", "module", "Symbol", "objectProto", "hasOwnProperty", "nativeObjectToString", "symToStringTag", "getRawTag", "value", "isOwn", "tag", "unmasked", "result", "require_objectToString", "__commonJSMin", "exports", "module", "objectProto", "nativeObjectToString", "objectToString", "value", "require_baseGetTag", "__commonJSMin", "exports", "module", "Symbol", "getRawTag", "objectToString", "nullTag", "undefinedTag", "symToStringTag", "baseGetTag", "value", "require_isObject", "__commonJSMin", "exports", "module", "isObject", "value", "type", "require_isFunction", "__commonJSMin", "exports", "module", "baseGetTag", "isObject", "asyncTag", "funcTag", "genTag", "proxyTag", "isFunction", "value", "tag", "require_isLength", "__commonJSMin", "exports", "module", "MAX_SAFE_INTEGER", "isLength", "value", "require_isArrayLike", "__commonJSMin", "exports", "module", "isFunction", "isLength", "isArrayLike", "value", "require_isIndex", "__commonJSMin", "exports", "module", "MAX_SAFE_INTEGER", "reIsUint", "isIndex", "value", "length", "type", "require_isIterateeCall", "__commonJSMin", "exports", "module", "eq", "isArrayLike", "isIndex", "isObject", "isIterateeCall", "value", "index", "object", "type", "require_trimmedEndIndex", "__commonJSMin", "exports", "module", "reWhitespace", "trimmedEndIndex", "string", "index", "require_baseTrim", "__commonJSMin", "exports", "module", "trimmedEndIndex", "reTrimStart", "baseTrim", "string", "require_isObjectLike", "__commonJSMin", "exports", "module", "isObjectLike", "value", "require_isSymbol", "__commonJSMin", "exports", "module", "baseGetTag", "isObjectLike", "symbolTag", "isSymbol", "value", "require_toNumber", "__commonJSMin", "exports", "module", "baseTrim", "isObject", "isSymbol", "NAN", "reIsBadHex", "reIsBinary", "reIsOctal", "freeParseInt", "toNumber", "value", "other", "isBinary", "require_toFinite", "__commonJSMin", "exports", "module", "toNumber", "INFINITY", "MAX_INTEGER", "toFinite", "value", "sign", "require_createRange", "__commonJSMin", "exports", "module", "baseRange", "isIterateeCall", "toFinite", "createRange", "fromRight", "start", "end", "step", "require_range", "__commonJSMin", "exports", "module", "createRange", "range", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "Fragment", "props", "children", "Component", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "__k", "indexOf", "sibling", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "prevDebounce", "options", "debounceRendering", "setTimeout", "queue", "__r", "sort", "a", "b", "__v", "__b", "some", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "__P", "assign", "diff", "ownerSVGElement", "__h", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "createVNode", "Array", "isArray", "key", "ref", "EMPTY_OBJ", "reorderChildren", "placeChild", "parentNode", "unmount", "applyRef", "tmp", "placeChild", "parentDom", "childVNode", "oldVNode", "oldChildren", "newDom", "oldDom", "nextDom", "sibDom", "j", "__d", "parentNode", "outer", "appendChild", "nextSibling", "length", "insertBefore", "diffProps", "dom", "newProps", "oldProps", "isSvg", "hydrate", "i", "setProperty", "setStyle", "style", "key", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "slice", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "indexOf", "removeAttribute", "setAttribute", "this", "type", "options", "event", "diff", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "isHydrating", "tmp", "c", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "renderResult", "newType", "constructor", "__h", "__e", "props", "contextType", "__c", "__", "__E", "prototype", "render", "Component", "doRender", "sub", "state", "context", "_sb", "__s", "getDerivedStateFromProps", "assign", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "__v", "__k", "forEach", "vnode", "componentWillUpdate", "componentDidUpdate", "__P", "__r", "getChildContext", "getSnapshotBeforeUpdate", "Fragment", "children", "diffChildren", "Array", "isArray", "base", "diffElementNodes", "diffed", "commitRoot", "root", "some", "cb", "call", "child", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "createElement", "is", "data", "childNodes", "EMPTY_OBJ", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "getDomSibling", "removeNode", "checked", "applyRef", "ref", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "ownerSVGElement", "firstChild", "createContext", "defaultValue", "contextId", "context", "__c", "i", "__", "Consumer", "props", "contextValue", "children", "Provider", "subs", "ctx", "this", "getChildContext", "shouldComponentUpdate", "_props", "value", "some", "enqueueRender", "sub", "c", "push", "old", "componentWillUnmount", "splice", "indexOf", "call", "contextType", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "Component", "prototype", "update", "callback", "s", "__s", "state", "assign", "__v", "_sb", "forceUpdate", "render", "Fragment", "rerenderQueue", "process", "__r", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "EMPTY", "oldBeforeDiff", "options", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "getHookState", "index", "type", "__h", "hooks", "__H", "__", "length", "push", "__V", "useMemo", "factory", "args", "state", "getHookState", "currentIndex", "argsChanged", "__H", "__V", "_pendingArgs", "__h", "__", "useContext", "context", "provider", "currentComponent", "__c", "state", "getHookState", "currentIndex", "c", "__", "sub", "props", "value", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "forEach", "invokeCleanup", "__h", "invokeEffect", "e", "options", "__e", "__v", "__b", "vnode", "type", "__m", "__", "__k", "indexOf", "currentComponent", "oldBeforeDiff", "__r", "oldBeforeRender", "currentIndex", "hooks", "__c", "previousComponent", "hookItem", "__N", "__V", "EMPTY", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "argsChanged", "oldArgs", "newArgs", "arg", "index", "cycleDetected", "Error", "endBatch", "batchDepth", "error", "hasError", "batchedEffect", "effect", "batchIteration", "next", "_nextBatchedEffect", "_flags", "needsToRecompute", "_callback", "err", "evalContext", "batchedEffect", "batchDepth", "batchIteration", "globalVersion", "addDependency", "signal", "node", "_node", "_target", "_sources", "_version", "_source", "_prevSource", "_nextSource", "_prevTarget", "_nextTarget", "_rollbackNode", "_flags", "_subscribe", "Signal", "value", "this", "_value", "_targets", "prototype", "_refresh", "_unsubscribe", "prev", "next", "subscribe", "fn", "effect", "flag", "valueOf", "toString", "peek", "Object", "defineProperty", "get", "set", "cycleDetected", "_notify", "endBatch", "needsToRecompute", "target", "prepareSources", "rollbackNode", "cleanupSources", "sources", "Computed", "compute", "call", "undefined", "_compute", "_globalVersion", "prevContext", "err", "OUTDATED", "computed", "cleanupEffect", "cleanup", "_cleanup", "disposeEffect", "endEffect", "Error", "Effect", "_nextBatchedEffect", "_callback", "finish", "_start", "bind", "_dispose", "currentComponent", "hook", "hookName", "hookFn", "options", "bind", "setCurrentUpdater", "updater", "finishUpdate", "_start", "Text", "_ref", "data", "currentSignal", "useSignal", "value", "s", "useMemo", "v", "_this", "__v", "__", "__c", "_updateFlags", "_updater", "_callback", "base", "peek", "computed", "n", "displayName", "Object", "defineProperties", "Signal", "prototype", "constructor", "configurable", "type", "props", "get", "this", "__b", "old", "vnode", "signalProps", "i", "e", "__np", "component", "update", "effect", "setState", "createUpdater", "error", "oldVNode", "dom", "__e", "renderedProps", "updaters", "_updaters", "prop", "_dispose", "signal", "createPropUpdater", "_update", "propSignal", "setAsProperty", "ownerSVGElement", "changeSignal", "newSignal", "newProps", "setAttribute", "removeAttribute", "o", "index", "Component", "shouldComponentUpdate", "state", "_sources", "HAS_PENDING_UPDATE", "u", "ALIAS", "DOC", "MAP", "PAIR", "SCALAR", "SEQ", "NODE_TYPE", "isAlias", "node", "isDocument", "isMap", "isPair", "isScalar", "isSeq", "isCollection", "isNode", "hasAnchor", "NodeBase", "type", "copy", "BREAK", "SKIP", "REMOVE", "visit", "node", "visitor", "visitor_", "initVisitor", "isDocument", "visit_", "key", "path", "ctrl", "callVisitor", "isNode", "isPair", "replaceNode", "isCollection", "i", "ci", "ck", "cv", "visitAsync", "visitAsync_", "isMap", "isSeq", "isScalar", "isAlias", "parent", "pt", "escapeChars", "escapeTagName", "tn", "ch", "Directives", "yaml", "tags", "copy", "res", "line", "onError", "parts", "name", "handle", "prefix", "version", "isValid", "source", "verbatim", "suffix", "tag", "doc", "lines", "tagEntries", "tagNames", "isNode", "visit", "_key", "node", "anchorIsValid", "anchor", "msg", "anchorNames", "root", "anchors", "visit", "_key", "node", "findNewAnchor", "prefix", "exclude", "i", "name", "createNodeAnchors", "doc", "aliasObjects", "sourceObjects", "prevAnchors", "source", "ref", "isScalar", "isCollection", "error", "Alias", "NodeBase", "source", "ALIAS", "doc", "found", "visit", "_key", "node", "_arg", "ctx", "anchors", "maxAliasCount", "msg", "data", "getAliasCount", "_onComment", "_onChompKeep", "src", "anchorIsValid", "isAlias", "anchor", "isCollection", "count", "item", "c", "isPair", "kc", "vc", "toJS", "value", "arg", "ctx", "v", "hasAnchor", "data", "res", "isScalarValue", "value", "Scalar", "NodeBase", "SCALAR", "arg", "ctx", "toJS", "defaultTagPrefix", "findTagObject", "value", "tagName", "tags", "match", "t", "tagObj", "createNode", "ctx", "isDocument", "isNode", "isPair", "map", "MAP", "aliasDuplicateObjects", "onAnchor", "onTagObj", "schema", "sourceObjects", "ref", "Alias", "node", "Scalar", "SEQ", "collectionFromPath", "schema", "path", "value", "v", "k", "a", "createNode", "isEmptyPath", "Collection", "NodeBase", "type", "copy", "it", "isNode", "isPair", "key", "rest", "node", "isCollection", "keepScalar", "isScalar", "allowScalar", "n", "stringifyComment", "str", "indentComment", "comment", "indent", "lineComment", "FOLD_FLOW", "FOLD_BLOCK", "FOLD_QUOTED", "foldFlowLines", "text", "indent", "mode", "indentAtStart", "lineWidth", "minContentWidth", "onFold", "onOverflow", "endStep", "folds", "escapedFolds", "end", "split", "prev", "overflow", "i", "escStart", "escEnd", "consumeMoreIndentedLines", "ch", "next", "j", "res", "fold", "getFoldOptions", "ctx", "containsDocumentMarker", "str", "lineLengthOverLimit", "lineWidth", "indentLength", "limit", "strLen", "i", "start", "doubleQuotedString", "value", "json", "implicitKey", "minMultiLineLength", "indent", "ch", "code", "foldFlowLines", "FOLD_QUOTED", "singleQuotedString", "res", "FOLD_FLOW", "quotedString", "singleQuote", "qs", "hasDouble", "hasSingle", "blockString", "comment", "type", "onComment", "onChompKeep", "blockQuote", "commentString", "literal", "Scalar", "chomp", "endStart", "end", "endNlPos", "startWithSpace", "startEnd", "startNlPos", "header", "body", "FOLD_BLOCK", "plainString", "item", "actualString", "inFlow", "test", "tag", "compat", "tags", "stringifyString", "ss", "_stringify", "_type", "defaultKeyType", "defaultStringType", "t", "createStringifyContext", "doc", "options", "opt", "stringifyComment", "inFlow", "getTagObject", "tags", "item", "match", "t", "tagObj", "obj", "isScalar", "name", "stringifyProps", "node", "anchors", "props", "anchor", "isCollection", "anchorIsValid", "tag", "stringify", "ctx", "onComment", "onChompKeep", "isPair", "isAlias", "isNode", "o", "str", "stringifyString", "stringifyPair", "key", "value", "ctx", "onComment", "onChompKeep", "allNullValues", "doc", "indent", "indentStep", "commentString", "indentSeq", "simpleKeys", "keyComment", "isNode", "isCollection", "msg", "explicitKey", "isScalar", "Scalar", "keyCommentDone", "chompKeep", "str", "stringify", "lineComment", "vcb", "valueComment", "cs", "indentComment", "isSeq", "valueCommentDone", "valueStr", "ws", "warn", "logLevel", "warning", "MERGE_KEY", "addPairToJSMap", "ctx", "map", "key", "value", "isMergeKey", "isAlias", "isSeq", "it", "mergeToJSMap", "jsKey", "toJS", "stringKey", "stringifyKey", "jsValue", "isScalar", "Scalar", "source", "isMap", "srcMap", "isNode", "strCtx", "createStringifyContext", "node", "strKey", "jsonStr", "warn", "createPair", "key", "value", "ctx", "k", "createNode", "v", "Pair", "NODE_TYPE", "PAIR", "schema", "isNode", "_", "pair", "addPairToJSMap", "onComment", "onChompKeep", "stringifyPair", "stringifyCollection", "collection", "ctx", "options", "stringifyFlowCollection", "stringifyBlockCollection", "comment", "items", "blockItemPrefix", "flowChars", "itemIndent", "onChompKeep", "onComment", "indent", "commentString", "itemCtx", "chompKeep", "lines", "i", "item", "isNode", "addCommentBefore", "isPair", "ik", "str", "stringify", "lineComment", "line", "indentComment", "indentStep", "reqNewline", "linesAtValue", "iv", "start", "end", "sum", "Collection", "ic", "findPair", "items", "key", "k", "isScalar", "it", "isPair", "YAMLMap", "Collection", "schema", "MAP", "pair", "overwrite", "_pair", "Pair", "prev", "sortEntries", "isScalarValue", "i", "item", "keepScalar", "node", "value", "_", "ctx", "Type", "map", "addPairToJSMap", "onComment", "onChompKeep", "stringifyCollection", "createMap", "schema", "obj", "ctx", "keepUndefined", "replacer", "map", "YAMLMap", "add", "key", "value", "createPair", "onError", "isMap", "YAMLSeq", "Collection", "schema", "SEQ", "value", "key", "idx", "asItemIndex", "keepScalar", "it", "isScalar", "prev", "isScalarValue", "_", "ctx", "seq", "item", "toJS", "onComment", "onChompKeep", "stringifyCollection", "createSeq", "schema", "obj", "ctx", "replacer", "seq", "YAMLSeq", "i", "it", "key", "createNode", "onError", "isSeq", "string", "value", "str", "item", "ctx", "onComment", "onChompKeep", "stringifyString", "nullTag", "value", "Scalar", "source", "ctx", "boolTag", "value", "str", "Scalar", "source", "ctx", "sv", "stringifyNumber", "format", "minFractionDigits", "tag", "value", "num", "n", "i", "d", "floatNaN", "value", "str", "stringifyNumber", "floatExp", "node", "num", "float", "Scalar", "dot", "intIdentify", "value", "intResolve", "str", "offset", "radix", "intAsBigInt", "intStringify", "node", "prefix", "stringifyNumber", "intOct", "_onError", "opt", "int", "intHex", "schema", "map", "seq", "string", "nullTag", "boolTag", "intOct", "int", "intHex", "floatNaN", "floatExp", "float", "intIdentify", "value", "stringifyJSON", "jsonScalars", "str", "Scalar", "_onError", "intAsBigInt", "jsonError", "onError", "schema", "map", "seq", "binary", "value", "src", "onError", "str", "buffer", "comment", "type", "ctx", "onComment", "onChompKeep", "buf", "s", "i", "Scalar", "lineWidth", "n", "lines", "o", "stringifyString", "resolvePairs", "seq", "onError", "isSeq", "i", "item", "isPair", "isMap", "pair", "Pair", "Scalar", "cn", "createPairs", "schema", "iterable", "ctx", "replacer", "pairs", "YAMLSeq", "it", "key", "value", "keys", "createPair", "YAMLOMap", "YAMLSeq", "YAMLMap", "_", "ctx", "map", "pair", "key", "value", "isPair", "toJS", "omap", "seq", "onError", "pairs", "resolvePairs", "seenKeys", "isScalar", "schema", "iterable", "createPairs", "boolStringify", "value", "source", "ctx", "trueTag", "falseTag", "Scalar", "floatNaN", "value", "str", "stringifyNumber", "floatExp", "node", "num", "float", "Scalar", "dot", "f", "intIdentify", "value", "intResolve", "str", "offset", "radix", "intAsBigInt", "sign", "n", "intStringify", "node", "prefix", "stringifyNumber", "intBin", "_onError", "opt", "intOct", "int", "intHex", "YAMLSet", "YAMLMap", "schema", "key", "pair", "isPair", "Pair", "findPair", "keepPair", "isScalar", "value", "prev", "_", "ctx", "onComment", "onChompKeep", "set", "map", "onError", "isMap", "iterable", "replacer", "createPair", "parseSexagesimal", "str", "asBigInt", "sign", "parts", "num", "n", "res", "p", "stringifySexagesimal", "node", "value", "stringifyNumber", "_60", "intTime", "_onError", "intAsBigInt", "floatTime", "timestamp", "match", "year", "month", "day", "hour", "minute", "second", "millisec", "date", "tz", "d", "schema", "map", "seq", "string", "nullTag", "trueTag", "falseTag", "intBin", "intOct", "int", "intHex", "floatNaN", "floatExp", "float", "binary", "omap", "pairs", "set", "intTime", "floatTime", "timestamp", "schemas", "schema", "map", "seq", "string", "tagsByName", "binary", "boolTag", "float", "floatExp", "floatNaN", "floatTime", "int", "intHex", "intOct", "intTime", "nullTag", "omap", "pairs", "set", "timestamp", "coreKnownTags", "getTags", "customTags", "schemaName", "tags", "keys", "key", "tag", "tagObj", "sortMapEntriesByKey", "a", "b", "Schema", "compat", "customTags", "merge", "resolveKnownTags", "schema", "sortMapEntries", "toStringDefaults", "getTags", "coreKnownTags", "MAP", "map", "SCALAR", "string", "SEQ", "seq", "copy", "stringifyDocument", "doc", "options", "lines", "hasDirectives", "dir", "ctx", "createStringifyContext", "commentString", "cs", "indentComment", "chompKeep", "contentComment", "isNode", "onChompKeep", "body", "stringify", "lineComment", "dc", "applyReviver", "reviver", "obj", "key", "val", "len", "v0", "v1", "k", "Document", "value", "replacer", "options", "NODE_TYPE", "DOC", "_replacer", "opt", "version", "Directives", "copy", "isNode", "assertCollection", "path", "node", "name", "prev", "anchorNames", "findNewAnchor", "Alias", "keyToStr", "v", "asStr", "aliasDuplicateObjects", "anchorPrefix", "flow", "keepUndefined", "onTagObj", "tag", "onAnchor", "setAnchors", "sourceObjects", "createNodeAnchors", "ctx", "createNode", "isCollection", "key", "k", "Pair", "isEmptyPath", "keepScalar", "isScalar", "collectionFromPath", "sv", "Schema", "json", "jsonArg", "mapAsMap", "maxAliasCount", "reviver", "stringify", "res", "toJS", "count", "applyReviver", "s", "stringifyDocument", "contents", "YAMLError", "name", "pos", "code", "message", "YAMLParseError", "YAMLWarning", "prettifyError", "src", "lc", "error", "line", "col", "ci", "lineStr", "trimStart", "prev", "count", "end", "pointer", "resolveProps", "tokens", "flow", "indicator", "next", "offset", "onError", "startOnNewline", "spaceBefore", "atNewline", "hasSpace", "comment", "commentSep", "hasNewline", "hasNewlineAfterProp", "reqSpace", "anchor", "tag", "comma", "found", "start", "token", "cb", "last", "end", "containsNewline", "key", "st", "it", "flowIndentCheck", "indent", "fc", "onError", "end", "containsNewline", "mapIncludes", "ctx", "items", "search", "uniqueKeys", "isEqual", "a", "b", "isScalar", "pair", "startColMsg", "resolveBlockMap", "composeNode", "composeEmptyNode", "ctx", "bm", "onError", "map", "YAMLMap", "offset", "commentEnd", "collItem", "start", "key", "sep", "value", "keyProps", "resolveProps", "implicitKey", "containsNewline", "keyStart", "keyNode", "flowIndentCheck", "mapIncludes", "valueProps", "valueNode", "pair", "Pair", "resolveBlockSeq", "composeNode", "composeEmptyNode", "ctx", "bs", "onError", "seq", "YAMLSeq", "offset", "commentEnd", "start", "value", "props", "resolveProps", "node", "flowIndentCheck", "resolveEnd", "end", "offset", "reqSpace", "onError", "comment", "hasSpace", "sep", "token", "source", "type", "cb", "blockMsg", "isBlock", "token", "resolveFlowCollection", "composeNode", "composeEmptyNode", "ctx", "fc", "onError", "isMap", "fcName", "coll", "YAMLMap", "YAMLSeq", "atRoot", "offset", "i", "collItem", "start", "key", "sep", "value", "props", "resolveProps", "containsNewline", "prevItemComment", "loop", "st", "prev", "isPair", "valueNode", "keyStart", "keyNode", "valueProps", "pair", "Pair", "map", "mapIncludes", "expectedEnd", "ce", "ee", "cePos", "name", "msg", "end", "resolveEnd", "composeCollection", "CN", "ctx", "token", "tagToken", "onError", "coll", "resolveBlockMap", "resolveBlockSeq", "resolveFlowCollection", "tagName", "msg", "Coll", "expType", "isMap", "tag", "t", "kt", "res", "node", "isNode", "Scalar", "resolveBlockScalar", "scalar", "strict", "onError", "start", "header", "parseBlockScalarHeader", "type", "Scalar", "lines", "splitLines", "chompStart", "i", "content", "value", "end", "trimIndent", "offset", "contentStart", "indent", "message", "sep", "prevMoreIndented", "crlf", "props", "source", "mode", "chomp", "error", "ch", "n", "hasSpace", "comment", "length", "token", "ts", "split", "first", "m", "resolveFlowScalar", "scalar", "strict", "onError", "offset", "type", "source", "end", "_type", "value", "_onError", "rel", "code", "msg", "Scalar", "plainValue", "singleQuotedValue", "doubleQuotedValue", "valueEnd", "re", "resolveEnd", "badChar", "foldLines", "first", "line", "match", "res", "sep", "pos", "last", "i", "ch", "fold", "foldNewline", "next", "cc", "escapeCodes", "length", "parseCharCode", "raw", "wsStart", "composeScalar", "ctx", "token", "tagToken", "onError", "value", "type", "comment", "range", "resolveBlockScalar", "resolveFlowScalar", "tagName", "msg", "tag", "findScalarTagByName", "findScalarTagByTest", "SCALAR", "scalar", "res", "isScalar", "Scalar", "error", "schema", "matchWithTest", "kt", "directives", "compat", "ts", "cs", "emptyScalarPosition", "offset", "before", "pos", "i", "st", "CN", "composeNode", "composeEmptyNode", "ctx", "token", "props", "onError", "spaceBefore", "comment", "anchor", "tag", "node", "isSrcToken", "composeAlias", "composeScalar", "composeCollection", "message", "offset", "before", "pos", "end", "emptyScalarPosition", "options", "source", "alias", "Alias", "valueEnd", "re", "resolveEnd", "composeDoc", "options", "directives", "offset", "start", "value", "end", "onError", "opts", "doc", "Document", "ctx", "props", "resolveProps", "composeNode", "composeEmptyNode", "contentEnd", "re", "resolveEnd", "getErrorPos", "src", "offset", "source", "parsePrelude", "prelude", "comment", "atComment", "afterEmptyLine", "Composer", "options", "code", "message", "warning", "pos", "YAMLWarning", "YAMLParseError", "Directives", "doc", "afterDoc", "dc", "isCollection", "it", "isPair", "cb", "tokens", "forceDoc", "endOffset", "token", "composeDoc", "msg", "error", "end", "resolveEnd", "opts", "Document", "BREAK", "SKIP", "REMOVE", "visit", "cst", "visitor", "_visit", "path", "item", "field", "index", "tok", "parent", "coll", "ctrl", "token", "i", "ci", "BOM", "DOCUMENT", "FLOW_END", "SCALAR", "tokenType", "source", "BOM", "DOCUMENT", "FLOW_END", "SCALAR", "isEmpty", "ch", "hexDigits", "tagChars", "invalidFlowScalarChars", "invalidAnchorChars", "isNotAnchorChar", "Lexer", "source", "incomplete", "next", "i", "n", "offset", "indent", "dt", "end", "state", "line", "BOM", "dirEnd", "cs", "sp", "DOCUMENT", "s", "ch0", "ch1", "nl", "FLOW_END", "quote", "qb", "loop", "lastChar", "SCALAR", "inFlow", "allowEmpty", "allowTabs", "test", "LineCounter", "offset", "low", "high", "mid", "start", "includesToken", "list", "type", "i", "findNonEmptyIndex", "isFlowToken", "token", "getPrevProps", "parent", "it", "getFirstKeyStartProps", "prev", "loop", "fixFlowSeqItems", "fc", "Parser", "onNewLine", "Lexer", "source", "incomplete", "lexeme", "tokenType", "message", "top", "n", "error", "last", "st", "doc", "bv", "scalar", "start", "sep", "map", "nl", "end", "atNextItem", "key", "fs", "seq", "indent", "docEnd", "parseOptions", "options", "prettyErrors", "LineCounter", "parseDocument", "source", "options", "lineCounter", "prettyErrors", "parseOptions", "parser", "Parser", "composer", "Composer", "doc", "_doc", "YAMLParseError", "prettifyError", "parse", "src", "reviver", "_reviver", "warning", "warn", "import_range", "range", "min", "max", "option", "options", "patchOut", "patchIn", "ui", "type", "x", "y", "standardKnob", "microbrute", "ui", "option", "range", "patchOut", "patchIn", "controlMap", "control", "keys", "item", "state", "createAppState", "AppState", "B", "u", "useAppState", "q", "Knob", "schema", "value", "size", "aMin", "aDelta", "a", "x", "y", "transform", "h", "p", "Toggle", "delta", "travelHeight", "s", "i", "v", "Fader", "width", "height", "Patch", "PatchOutCable", "to", "controlMap", "outpos", "inpos", "GenericControl", "Template", "range", "offset", "minY", "notchHeight", "finalY", "Microbrute", "patch", "useAppState", "params", "patcheOuts", "microbrute", "c", "cont", "patchState", "PatchState", "B", "mount", "P", "h", "Microbrute", "library_default", "Search", "app", "useAppState", "handleClick", "e", "index", "library_default", "h", "p", "item", "i", "mountLibrary", "P", "h", "AppState", "state", "Library", "patch", "useAppState", "p", "Search", "Microbrute", "mount", "$patchSrc", "getPatchSrc", "update", "src", "patch", "parse", "key", "patchState", "u", "mountLibrary", "library_default", "state"]
}
